{"version":3,"sources":["components/Header.js","helper.js","components/Formulario.js","components/Resumen.js","components/Resultado.js","components/Spinner.js","App.js","index.js"],"names":["ContenedorHeader","styled","header","TextoHeader","h1","Header","titulo","primeraMayuscula","texto","charAt","toUpperCase","slice","Campo","div","Label","label","Select","select","InputRadio","input","Boton","button","Error","Formulario","setResumen","setCargando","useState","marca","year","plan","datos","setDatos","error","setError","obtenerInformacion","e","target","name","value","onSubmit","preventDefault","trim","resultado","diferencia","Date","getFullYear","obtenerDiferenciaYear","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","setTimeout","cotizacion","Number","onChange","type","checked","ContenedorResumen","Resumen","Mensaje","p","ResultadoCotizacion","TextoCotizacion","Resultado","TransitionGroup","component","className","CSSTransition","classNames","timeout","enter","exit","Spinner","Contenedor","ContenedorFormulario","App","resumen","cargando","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.826b8ae0.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport PropTypes from \"prop-types\";\n\nconst ContenedorHeader = styled.header`\n  background-color: #26c6da;\n  padding: 10px;\n  font-weight: bold;\n  color: #ffffff;\n`;\n\nconst TextoHeader = styled.h1`\n  font-size: 2rem;\n  margin: 0;\n  font-family: \"Slabo 27px\", serif;\n  text-align: center;\n`;\n\nconst Header = ({ titulo }) => {\n  return (\n    <ContenedorHeader>\n      <TextoHeader>{titulo}</TextoHeader>\n    </ContenedorHeader>\n  );\n};\n\nHeader.propTypes = {\n  titulo: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","export function obtenerDiferenciaYear(year) {\n  return new Date().getFullYear() - year;\n}\n\nexport function calcularMarca(marca) {\n  let incremento;\n\n  switch (marca) {\n    case \"europeo\":\n      incremento = 1.3;\n      break;\n    case \"americano\":\n      incremento = 1.15;\n      break;\n    case \"asiatico\":\n      incremento = 1.5;\n      break;\n    default:\n      break;\n  }\n\n  return incremento;\n}\n\n/* calcula el tipo de seguro */\nexport function obtenerPlan(plan) {\n  return plan === \"basico\" ? 1.2 : 1.5;\n}\n\n/* Muestra la primera letra en mayuscula */\nexport function primeraMayuscula(texto) {\n  return texto.charAt(0).toUpperCase() + texto.slice(1);\n}\n","import React, { useState } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { obtenerDiferenciaYear, calcularMarca, obtenerPlan } from \"../helper\";\nimport PropTypes from \"prop-types\";\n\nconst Campo = styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n  align-items: center;\n`;\n\nconst Label = styled.label`\n  flex: 0 0 100px;\n`;\n\nconst Select = styled.select`\n  display: block;\n  width: 100%;\n  padding: 1rem;\n  border: 1px solid #e1e1e1;\n  --webkit-appearance: none;\n`;\n\nconst InputRadio = styled.input`\n  margin: 0 1rem;\n`;\n\nconst Boton = styled.button`\n  background-color: #00838f;\n  font-size: 16px;\n  width: 100%;\n  padding: 1rem;\n  color: #fff;\n  text-transform: uppercase;\n  font-weight: bold;\n  border: none;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  margin-top: 2rem;\n\n  &:hover {\n    background-color: #26c6da;\n  }\n`;\n\nconst Error = styled.div`\n  color: white;\n  background-color: red;\n  padding: 1rem;\n  width: 100%;\n  text-align: center;\n  margin-bottom: 2rem;\n`;\n\nconst Formulario = ({ setResumen, setCargando }) => {\n  const [datos, setDatos] = useState({\n    marca: \"\",\n    year: \"\",\n    plan: \"basico\",\n  });\n  const [error, setError] = useState(false);\n\n  /* Extraer los datos del state */\n  const { marca, year, plan } = datos;\n\n  /* leer datos del formulario */\n  const obtenerInformacion = (e) => {\n    setDatos({\n      ...datos,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  /* Cuando el usuario presiona en submit */\n  const cotizarSeguro = (e) => {\n    e.preventDefault();\n    if (marca.trim() === \"\" || year.trim() === \"\" || plan.trim() === \"\") {\n      setError(true);\n      return;\n    }\n\n    setError(false);\n\n    let resultado = 2000;\n\n    /* Obtener la diferencia de años */\n    const diferencia = obtenerDiferenciaYear(year);\n    /* por cada año hay que restar el 3% */\n    resultado -= (diferencia * 3 * resultado) / 100;\n    /* Americano 15 */\n    /* Asiatico 5%*/\n    /* Europe 30% */\n    resultado = calcularMarca(marca) * resultado;\n    /* Basico aumento 20% */\n    /* Completo 50% */\n    const incrementoPlan = obtenerPlan(plan);\n    resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n    /* Mostrar spinner */\n    setCargando(true);\n\n    setTimeout(() => {\n      setCargando(false);\n      setResumen({\n        cotizacion: Number(resultado),\n        datos,\n      });\n    }, 1500);\n    //total\n  };\n\n  /* Renderizamos el componente */\n  return (\n    <form onSubmit={cotizarSeguro}>\n      {error ? <Error>Todos los campos son obligatorios</Error> : null}\n      <Campo>\n        <Label>Marca</Label>\n        <Select name=\"marca\" value={marca} onChange={obtenerInformacion}>\n          <option value=\"\">-- Seleccione --</option>\n          <option value=\"americano\">Americano</option>\n          <option value=\"europeo\">Europeo</option>\n          <option value=\"asiatico\">Asiatico</option>\n        </Select>\n      </Campo>\n\n      <Campo>\n        <Label>Año</Label>\n        <Select name=\"year\" value={year} onChange={obtenerInformacion}>\n          <option value=\"\">-- Seleccione --</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n          <option value=\"2018\">2018</option>\n          <option value=\"2017\">2017</option>\n          <option value=\"2016\">2016</option>\n          <option value=\"2015\">2015</option>\n          <option value=\"2014\">2014</option>\n          <option value=\"2013\">2013</option>\n          <option value=\"2012\">2012</option>\n        </Select>\n      </Campo>\n\n      <Campo>\n        <Label name=\"plan\" value={plan}>\n          Plan\n        </Label>\n        <InputRadio\n          type=\"radio\"\n          name=\"plan\"\n          value=\"basico\"\n          checked={plan === \"basico\"}\n          onChange={obtenerInformacion}\n        />\n        Básico\n        <InputRadio\n          type=\"radio\"\n          name=\"plan\"\n          value=\"completo\"\n          checked={plan === \"completo\"}\n          onChange={obtenerInformacion}\n        />\n        Completo\n      </Campo>\n\n      <Boton type=\"submit\">Cotizar</Boton>\n    </form>\n  );\n};\n\nFormulario.propTypes = {\n  setResumen: PropTypes.func.isRequired,\n  setCargando: PropTypes.func.isRequired,\n};\n\nexport default Formulario;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport PropTypes from \"prop-types\";\nimport { primeraMayuscula } from \"../helper\";\n\nconst ContenedorResumen = styled.div`\n  padding: 1rem;\n  background-color: #00838f;\n  color: #fff;\n  text-align: center;\n  margin-top: 1rem;\n`;\n\nconst Resumen = ({ datos }) => {\n  const { marca, year, plan } = datos;\n\n  if (marca === \"\" || year === \"\" || plan === \"\") {\n    return null;\n  }\n  return (\n    <ContenedorResumen>\n      <h2>Resumen de Cotización</h2>\n      <ul>\n        <li>Marca: {primeraMayuscula(marca)}</li>\n        <li>Plan: {primeraMayuscula(plan)}</li>\n        <li>Año del Auto: {year}</li>\n      </ul>\n    </ContenedorResumen>\n  );\n};\n\nResumen.propTypes = {\n  datos: PropTypes.object.isRequired,\n};\n\nexport default Resumen;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport PropTypes from \"prop-types\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nconst Mensaje = styled.p`\n  background-color: rgb(127, 224, 237);\n  margin-top: 2rem;\n  padding: 1rem;\n  text-align: center;\n`;\n\nconst ResultadoCotizacion = styled.div`\n  text-align: center;\n  padding: 0.5rem;\n  border: 1px solid #26c6da;\n  background-color: rgb(127, 224, 237);\n  margin-top: 1rem;\n  position: relative;\n`;\n\nconst TextoCotizacion = styled.p`\n  color: #00838f;\n  padding: 1rem;\n  text-transform: uppercase;\n  font-weight: bold;\n  margin: 0;\n`;\nconst Resultado = ({ cotizacion }) => {\n  return cotizacion === 0 ? (\n    <Mensaje>Elige marca, año y tipo de seguro</Mensaje>\n  ) : (\n    <ResultadoCotizacion>\n      <TransitionGroup component=\"span\" className=\"resultado\">\n        <CSSTransition\n          classNames=\"resultado\"\n          key={cotizacion}\n          timeout={{ enter: 500, exit: 500 }}\n        >\n          <TextoCotizacion>\n            El total es: $ <span> {cotizacion}</span>\n          </TextoCotizacion>\n        </CSSTransition>\n      </TransitionGroup>\n    </ResultadoCotizacion>\n  );\n};\n\nResultado.propTypes = {\n  cotizacion: PropTypes.number.isRequired,\n};\n\nexport default Resultado;\n","import React from \"react\";\nimport \"./Spinner.css\";\nconst Spinner = () => {\n  return (\n    <div className=\"sk-circle\">\n      <div className=\"sk-circle1 sk-child\"></div>\n      <div className=\"sk-circle2 sk-child\"></div>\n      <div className=\"sk-circle3 sk-child\"></div>\n      <div className=\"sk-circle4 sk-child\"></div>\n      <div className=\"sk-circle5 sk-child\"></div>\n      <div className=\"sk-circle6 sk-child\"></div>\n      <div className=\"sk-circle7 sk-child\"></div>\n      <div className=\"sk-circle8 sk-child\"></div>\n      <div className=\"sk-circle9 sk-child\"></div>\n      <div className=\"sk-circle10 sk-child\"></div>\n      <div className=\"sk-circle11 sk-child\"></div>\n      <div className=\"sk-circle12 sk-child\"></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport styled from \"@emotion/styled\";\nimport Formulario from \"./components/Formulario\";\nimport Resumen from \"./components/Resumen\";\nimport Resultado from \"./components/Resultado\";\nimport Spinner from \"./components/Spinner\";\n\nconst Contenedor = styled.div`\n  max-width: 600px;\n  margin: 0 auto;\n`;\n\nconst ContenedorFormulario = styled.div`\n  background-color: #fff;\n  padding: 3rem;\n`;\n\nfunction App() {\n  const [resumen, setResumen] = useState({\n    cotizacion: 0,\n    datos: {\n      marca: \"\",\n      year: \"\",\n      plan: \"\",\n    },\n  });\n  /* sPINNER */\n  const [cargando, setCargando] = useState(false);\n  const { datos, cotizacion } = resumen;\n  return (\n    <Contenedor>\n      <Header titulo=\"Cotizador de Seguros\" />\n      <ContenedorFormulario>\n        <Formulario setResumen={setResumen} setCargando={setCargando} />\n        {cargando ? <Spinner /> : null}\n        {!cargando ? <Resumen datos={datos} /> : null}\n        {!cargando ? <Resultado cotizacion={cotizacion} /> : null}\n      </ContenedorFormulario>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}